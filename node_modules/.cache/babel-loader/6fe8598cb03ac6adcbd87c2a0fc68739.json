{"ast":null,"code":"var _jsxFileName = \"/home/emily/gametrivia/src/Components/FirstApi.jsx\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { saveApiToken, saveDataUser, clearCurrentData } from '../redux/actions';\n\nclass FirstApi extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.fetchApiToken = async () => {\n      const {\n        saveApi,\n        history,\n        email,\n        name,\n        dispatchDataUser,\n        clearData\n      } = this.props;\n      const response = await fetch('https://opentdb.com/api_token.php?command=request');\n      const data = await response.json();\n      const responseToken = data.token;\n      localStorage.setItem('token', responseToken);\n      saveApi(responseToken);\n      clearData();\n      dispatchDataUser({\n        name,\n        email\n      });\n      history.push('/game');\n    };\n  }\n\n  render() {\n    const {\n      validateButton\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      disabled: validateButton,\n      \"data-testid\": \"btn-play\",\n      onClick: this.fetchApiToken,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, \"Play\");\n  }\n\n}\n\nFirstApi.propTypes = {\n  saveApi: PropTypes.func.isRequired,\n  validateButton: PropTypes.bool.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  dispatchDataUser: PropTypes.func.isRequired,\n  clearData: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n  saveApi: token => dispatch(saveApiToken(token)),\n  dispatchDataUser: dataUser => dispatch(saveDataUser(dataUser)),\n  clearData: () => dispatch(clearCurrentData())\n});\n\nexport default connect(null, mapDispatchToProps)(FirstApi);","map":{"version":3,"sources":["/home/emily/gametrivia/src/Components/FirstApi.jsx"],"names":["PropTypes","React","Component","connect","saveApiToken","saveDataUser","clearCurrentData","FirstApi","fetchApiToken","saveApi","history","email","name","dispatchDataUser","clearData","props","response","fetch","data","json","responseToken","token","localStorage","setItem","push","render","validateButton","propTypes","func","isRequired","bool","shape","string","mapDispatchToProps","dispatch","dataUser"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,YADF,EAEEC,YAFF,EAGEC,gBAHF,QAIO,kBAJP;;AAMA,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SAC/BM,aAD+B,GACf,YAAY;AAC1B,YAAM;AAAEC,QAAAA,OAAF;AAAWC,QAAAA,OAAX;AAAoBC,QAAAA,KAApB;AAA2BC,QAAAA,IAA3B;AAAiCC,QAAAA,gBAAjC;AAAmDC,QAAAA;AAAnD,UAAiE,KAAKC,KAA5E;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mDAAD,CAA5B;AACA,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,YAAMC,aAAa,GAAGF,IAAI,CAACG,KAA3B;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,aAA9B;AACAX,MAAAA,OAAO,CAACW,aAAD,CAAP;AACAN,MAAAA,SAAS;AACTD,MAAAA,gBAAgB,CAAC;AAAED,QAAAA,IAAF;AAAQD,QAAAA;AAAR,OAAD,CAAhB;AACAD,MAAAA,OAAO,CAACc,IAAR,CAAa,OAAb;AACD,KAX8B;AAAA;;AAa/BC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAqB,KAAKX,KAAhC;AACA,wBACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,QAAQ,EAAGW,cAFb;AAGE,qBAAY,UAHd;AAIE,MAAA,OAAO,EAAG,KAAKlB,aAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAUD;;AAzB8B;;AA4BjCD,QAAQ,CAACoB,SAAT,GAAqB;AACnBlB,EAAAA,OAAO,EAAET,SAAS,CAAC4B,IAAV,CAAeC,UADL;AAEnBH,EAAAA,cAAc,EAAE1B,SAAS,CAAC8B,IAAV,CAAeD,UAFZ;AAGnBnB,EAAAA,OAAO,EAAEV,SAAS,CAAC+B,KAAV,CAAgB;AACvBP,IAAAA,IAAI,EAAExB,SAAS,CAAC4B,IAAV,CAAeC;AADE,GAAhB,EAENA,UALgB;AAMnBjB,EAAAA,IAAI,EAAEZ,SAAS,CAACgC,MAAV,CAAiBH,UANJ;AAOnBlB,EAAAA,KAAK,EAAEX,SAAS,CAACgC,MAAV,CAAiBH,UAPL;AAQnBhB,EAAAA,gBAAgB,EAAEb,SAAS,CAAC4B,IAAV,CAAeC,UARd;AASnBf,EAAAA,SAAS,EAAEd,SAAS,CAAC4B,IAAV,CAAeC;AATP,CAArB;;AAYA,MAAMI,kBAAkB,GAAIC,QAAD,KAAe;AACxCzB,EAAAA,OAAO,EAAGY,KAAD,IAAWa,QAAQ,CAAC9B,YAAY,CAACiB,KAAD,CAAb,CADY;AAExCR,EAAAA,gBAAgB,EAAGsB,QAAD,IAAcD,QAAQ,CAAC7B,YAAY,CAAC8B,QAAD,CAAb,CAFA;AAGxCrB,EAAAA,SAAS,EAAE,MAAMoB,QAAQ,CAAC5B,gBAAgB,EAAjB;AAHe,CAAf,CAA3B;;AAMA,eAAeH,OAAO,CAAC,IAAD,EAAO8B,kBAAP,CAAP,CAAkC1B,QAAlC,CAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  saveApiToken,\n  saveDataUser,\n  clearCurrentData,\n} from '../redux/actions';\n\nclass FirstApi extends Component {\n  fetchApiToken = async () => {\n    const { saveApi, history, email, name, dispatchDataUser, clearData } = this.props;\n    const response = await fetch('https://opentdb.com/api_token.php?command=request');\n    const data = await response.json();\n    const responseToken = data.token;\n    localStorage.setItem('token', responseToken);\n    saveApi(responseToken);\n    clearData();\n    dispatchDataUser({ name, email });\n    history.push('/game');\n  };\n\n  render() {\n    const { validateButton } = this.props;\n    return (\n      <button\n        type=\"button\"\n        disabled={ validateButton }\n        data-testid=\"btn-play\"\n        onClick={ this.fetchApiToken }\n      >\n        Play\n      </button>\n    );\n  }\n}\n\nFirstApi.propTypes = {\n  saveApi: PropTypes.func.isRequired,\n  validateButton: PropTypes.bool.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  dispatchDataUser: PropTypes.func.isRequired,\n  clearData: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  saveApi: (token) => dispatch(saveApiToken(token)),\n  dispatchDataUser: (dataUser) => dispatch(saveDataUser(dataUser)),\n  clearData: () => dispatch(clearCurrentData()),\n});\n\nexport default connect(null, mapDispatchToProps)(FirstApi);\n"]},"metadata":{},"sourceType":"module"}