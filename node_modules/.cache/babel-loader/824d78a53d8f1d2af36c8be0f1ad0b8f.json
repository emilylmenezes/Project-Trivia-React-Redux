{"ast":null,"code":"import { SAVE_DATA_USER, SAVE_PLAYER_SCORE, SAVE_ASSERTIONS, CLEAR_CURRENT_DATA } from '../actions';\nconst INITIAL_STATE = {\n  name: '',\n  assertions: 0,\n  score: 0,\n  gravatarEmail: ''\n};\n\nconst player = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SAVE_DATA_USER:\n      return { ...state,\n        name: action.dataUser.name,\n        gravatarEmail: action.dataUser.email\n      };\n\n    case SAVE_PLAYER_SCORE:\n      return { ...state,\n        score: state.score + action.score\n      };\n\n    case SAVE_ASSERTIONS:\n      return { ...state,\n        assertions: state.assertions + 1\n      };\n\n    case CLEAR_CURRENT_DATA:\n      return { ...state,\n        name: '',\n        assertions: 0,\n        score: 0,\n        gravatarEmail: ''\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default player;","map":{"version":3,"sources":["/home/emily/gametrivia/src/redux/reducers/player.js"],"names":["SAVE_DATA_USER","SAVE_PLAYER_SCORE","SAVE_ASSERTIONS","CLEAR_CURRENT_DATA","INITIAL_STATE","name","assertions","score","gravatarEmail","player","state","action","type","dataUser","email"],"mappings":"AAAA,SACEA,cADF,EAEEC,iBAFF,EAGEC,eAHF,EAIEC,kBAJF,QAKO,YALP;AAOA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,IAAI,EAAE,EADc;AAEpBC,EAAAA,UAAU,EAAE,CAFQ;AAGpBC,EAAAA,KAAK,EAAE,CAHa;AAIpBC,EAAAA,aAAa,EAAE;AAJK,CAAtB;;AAOA,MAAMC,MAAM,GAAG,YAAmC;AAAA,MAAlCC,KAAkC,uEAA1BN,aAA0B;AAAA,MAAXO,MAAW;;AAChD,UAAQA,MAAM,CAACC,IAAf;AACA,SAAKZ,cAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELL,QAAAA,IAAI,EAAEM,MAAM,CAACE,QAAP,CAAgBR,IAFjB;AAGLG,QAAAA,aAAa,EAAEG,MAAM,CAACE,QAAP,CAAgBC;AAH1B,OAAP;;AAKF,SAAKb,iBAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELH,QAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,GAAcI,MAAM,CAACJ;AAFvB,OAAP;;AAIF,SAAKL,eAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELJ,QAAAA,UAAU,EAAEI,KAAK,CAACJ,UAAN,GAAmB;AAF1B,OAAP;;AAIF,SAAKH,kBAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELL,QAAAA,IAAI,EAAE,EAFD;AAGLC,QAAAA,UAAU,EAAE,CAHP;AAILC,QAAAA,KAAK,EAAE,CAJF;AAKLC,QAAAA,aAAa,EAAE;AALV,OAAP;;AAOF;AACE,aAAOE,KAAP;AA1BF;AA4BD,CA7BD;;AA+BA,eAAeD,MAAf","sourcesContent":["import {\n  SAVE_DATA_USER,\n  SAVE_PLAYER_SCORE,\n  SAVE_ASSERTIONS,\n  CLEAR_CURRENT_DATA,\n} from '../actions';\n\nconst INITIAL_STATE = {\n  name: '',\n  assertions: 0,\n  score: 0,\n  gravatarEmail: '',\n};\n\nconst player = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case SAVE_DATA_USER:\n    return {\n      ...state,\n      name: action.dataUser.name,\n      gravatarEmail: action.dataUser.email,\n    };\n  case SAVE_PLAYER_SCORE:\n    return {\n      ...state,\n      score: state.score + action.score,\n    };\n  case SAVE_ASSERTIONS:\n    return {\n      ...state,\n      assertions: state.assertions + 1,\n    };\n  case CLEAR_CURRENT_DATA:\n    return {\n      ...state,\n      name: '',\n      assertions: 0,\n      score: 0,\n      gravatarEmail: '',\n    };\n  default:\n    return state;\n  }\n};\n\nexport default player;\n"]},"metadata":{},"sourceType":"module"}